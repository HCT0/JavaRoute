package GenericParadigm;
/*
 * 使二叉树可与支持泛型
 * 
 * 
 * */
public class NodeGenericChange<T> {
	public NodeGenericChange<T> leftNode;
	public NodeGenericChange<T> rightNode;
	public T value;
	
	
	public void add(T t) {
		if( t == null ) {
			value = t;
		}else {
			if( (Integer)t > (Integer)value)
				if(leftNode == null)
					leftNode = (NodeGenericChange<T>) new  NodeGenericChange<T>();
				leftNode.add(t);
			
			
		}
	}
	public static void main(String[] args) {
		int Random []  = new int[]{1,2,3,4,5,6,7,8,9,10};
		NodeGenericChange<Integer> roots = new NodeGenericChange<Integer>();
		for(int i=0 ;i<Random.length;i++) {
			roots.add(i);
		}
	}
	
}
