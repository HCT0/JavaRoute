package Thread;

import java.util.concurrent.atomic.AtomicInteger;

public class AtomicTest {
	private static int value =0;
	private static AtomicInteger ai = new AtomicInteger();
	
	public static void main(String[] args) {
		
		int  number = 10000;
		Thread ts1[] =  new Thread[number];
		
		 for (int i = 0; i < number; i++) {
			 Thread t =new Thread(){
				 public void run(){
					 value++;
	              	}
	          	};
	          t.start();
	          ts1[i] = t;
		 }
		 for (Thread t : ts1) {//等待所有线程结束
	            try {
	                t.join();
	            } catch (InterruptedException e) {
	                
	                e.printStackTrace();
	            }
	        }
		 System.out.printf("%d个线程进行value++后，value的值变成:%d%n", number,value);
		 
		 //第二种方法
		 Thread [] ts2 = new Thread[number];
		 for(int i=0 ;i<number; i++) {
			 Thread t2 =new Thread() {
				 public void run() {
					ai.incrementAndGet();
				 }
			 };
			 t2.start();
			 ts2[i] = t2;
		 }
		 for (Thread t : ts2) {//等待所有线程结束
	            try {
	                t.join();
	            } catch (InterruptedException e) {
	                
	                e.printStackTrace();
	            }
	        }
		 System.out.printf("%d个线程进行atomicValue.incrementAndGet();后，atomicValue的值变成:%d%n", number,ai.intValue());
	
	
	
	
	}
}
